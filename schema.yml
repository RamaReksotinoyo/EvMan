openapi: 3.0.3
info:
  title: Event Management API
  version: 1.0.0
  description: API untuk mengelola event, pengguna, dan otentikasi dengan JWT
paths:
  /api/events/:
    get:
      operationId: events_list
      description: Get all events list
      summary: List Events
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
        description: 'Format: Bearer <your_token>'
        required: true
      tags:
      - Events
      security:
      - JWTAuth:
          type: http
          scheme: bearer
          bearerFormat: JWT
          description: 'Masukkan token dengan format: Bearer <your_token>'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
          description: ''
    post:
      operationId: events_create
      description: Create a new event
      summary: Create Event
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
        description: 'Format: Bearer <your_token>'
        required: true
      tags:
      - Events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventRequest'
        required: true
      security:
      - JWTAuth:
          type: http
          scheme: bearer
          bearerFormat: JWT
          description: 'Masukkan token dengan format: Bearer <your_token>'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/events/{id}/:
    get:
      operationId: events_retrieve
      description: Get event details by ID
      summary: Retrieve Event
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
        description: 'Format: Bearer <your_token>'
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event.
        required: true
      tags:
      - Events
      security:
      - JWTAuth:
          type: http
          scheme: bearer
          bearerFormat: JWT
          description: 'Masukkan token dengan format: Bearer <your_token>'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    put:
      operationId: events_update
      description: Update event details by ID
      summary: Update Event
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
        description: 'Format: Bearer <your_token>'
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event.
        required: true
      tags:
      - Events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventRequest'
        required: true
      security:
      - JWTAuth:
          type: http
          scheme: bearer
          bearerFormat: JWT
          description: 'Masukkan token dengan format: Bearer <your_token>'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    patch:
      operationId: events_partial_update
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
        description: 'Format: Bearer <your_token>'
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event.
        required: true
      tags:
      - Events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEventRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEventRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEventRequest'
      security:
      - JWTAuth:
          type: http
          scheme: bearer
          bearerFormat: JWT
          description: 'Masukkan token dengan format: Bearer <your_token>'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    delete:
      operationId: events_destroy
      description: Delete event by ID
      summary: Delete Event
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
        description: 'Format: Bearer <your_token>'
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this event.
        required: true
      tags:
      - Events
      security:
      - JWTAuth:
          type: http
          scheme: bearer
          bearerFormat: JWT
          description: 'Masukkan token dengan format: Bearer <your_token>'
      responses:
        '204':
          description: No response body
  /api/login/:
    post:
      operationId: login_create
      description: User authentication and get tokens.
      summary: Login User
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestRequest'
            examples:
              RequestExample:
                value:
                  username: admin
                  password: '123456'
                summary: Request Example
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - JWTAuth:
          type: http
          scheme: bearer
          bearerFormat: JWT
          description: 'Masukkan token dengan format: Bearer <your_token>'
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
              examples:
                ResponseExample:
                  value:
                    success: false
                    message: Invalid credentials
                    data: null
                  summary: Response Example
          description: ''
        '400':
          description: No response body
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - jwtAuth: []
      - cookieAuth: []
      - JWTAuth:
          type: http
          scheme: bearer
          bearerFormat: JWT
          description: 'Masukkan token dengan format: Bearer <your_token>'
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
components:
  schemas:
    Event:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        venue:
          type: string
          maxLength: 255
        capacity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - capacity
      - created_at
      - description
      - end_date
      - id
      - name
      - start_date
      - updated_at
      - venue
    EventRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          minLength: 1
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        venue:
          type: string
          minLength: 1
          maxLength: 255
        capacity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
      required:
      - capacity
      - description
      - end_date
      - name
      - start_date
      - venue
    LoginRequestRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - username
    LoginResponse:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        access_token_expired_at:
          type: integer
      required:
      - access_token
      - access_token_expired_at
      - refresh_token
    PatchedEventRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          minLength: 1
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        venue:
          type: string
          minLength: 1
          maxLength: 255
        capacity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
